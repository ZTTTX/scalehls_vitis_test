// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cemit_replaced_muls (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        l_dataA_0_dout,
        l_dataA_0_num_data_valid,
        l_dataA_0_fifo_cap,
        l_dataA_0_empty_n,
        l_dataA_0_read,
        l_dataB_0_dout,
        l_dataB_0_num_data_valid,
        l_dataB_0_fifo_cap,
        l_dataB_0_empty_n,
        l_dataB_0_read,
        l_dataB_1_din,
        l_dataB_1_num_data_valid,
        l_dataB_1_fifo_cap,
        l_dataB_1_full_n,
        l_dataB_1_write,
        l_mul1_din,
        l_mul1_num_data_valid,
        l_mul1_fifo_cap,
        l_mul1_full_n,
        l_mul1_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [33:0] l_dataA_0_dout;
input  [2:0] l_dataA_0_num_data_valid;
input  [2:0] l_dataA_0_fifo_cap;
input   l_dataA_0_empty_n;
output   l_dataA_0_read;
input  [63:0] l_dataB_0_dout;
input  [2:0] l_dataB_0_num_data_valid;
input  [2:0] l_dataB_0_fifo_cap;
input   l_dataB_0_empty_n;
output   l_dataB_0_read;
output  [63:0] l_dataB_1_din;
input  [1:0] l_dataB_1_num_data_valid;
input  [1:0] l_dataB_1_fifo_cap;
input   l_dataB_1_full_n;
output   l_dataB_1_write;
output  [63:0] l_mul1_din;
input  [1:0] l_mul1_num_data_valid;
input  [1:0] l_mul1_fifo_cap;
input   l_mul1_full_n;
output   l_mul1_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg l_dataA_0_read;
reg l_dataB_0_read;
reg l_dataB_1_write;
reg l_mul1_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [0:0] l_flush_Array_address0;
reg    l_flush_Array_ce0;
reg    l_flush_Array_we0;
reg   [0:0] l_flush_Array_d0;
wire   [0:0] l_flush_Array_q0;
reg   [0:0] l_Tc_m_Sreg_Array_address0;
reg    l_Tc_m_Sreg_Array_ce0;
reg    l_Tc_m_Sreg_Array_we0;
reg   [31:0] l_Tc_m_Sreg_Array_d0;
wire   [31:0] l_Tc_m_Sreg_Array_q0;
reg   [0:0] l_Tc_m_Sreg_Array_2_address0;
reg    l_Tc_m_Sreg_Array_2_ce0;
reg    l_Tc_m_Sreg_Array_2_we0;
reg   [31:0] l_Tc_m_Sreg_Array_2_d0;
wire   [31:0] l_Tc_m_Sreg_Array_2_q0;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_done;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_idle;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_ready;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_we0;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_d0;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_done;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_idle;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_ready;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_we0;
wire   [31:0] grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_d0;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_we0;
wire   [31:0] grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_d0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_idle;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_ready;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataA_0_read;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_0_read;
wire   [63:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_din;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_write;
wire   [63:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_din;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_write;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_we0;
wire   [31:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_d0;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_we0;
wire   [31:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_d0;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_address0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_ce0;
wire    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_we0;
wire   [0:0] grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_d0;
reg    grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg;
reg    ap_block_state1_ignore_call7;
wire    ap_CS_fsm_state2;
reg    grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg;
reg    ap_block_state1_ignore_call8;
reg    grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [3:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg = 1'b0;
#0 grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg = 1'b0;
#0 grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg = 1'b0;
end

cemit_replaced_muls_l_flush_Array_SHIFTREG_AUTO_0R0W #(
    .DataWidth( 1 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
l_flush_Array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l_flush_Array_address0),
    .ce0(l_flush_Array_ce0),
    .we0(l_flush_Array_we0),
    .d0(l_flush_Array_d0),
    .q0(l_flush_Array_q0)
);

cemit_replaced_muls_l_Tc_m_Sreg_Array_SHIFTREG_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
l_Tc_m_Sreg_Array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l_Tc_m_Sreg_Array_address0),
    .ce0(l_Tc_m_Sreg_Array_ce0),
    .we0(l_Tc_m_Sreg_Array_we0),
    .d0(l_Tc_m_Sreg_Array_d0),
    .q0(l_Tc_m_Sreg_Array_q0)
);

cemit_replaced_muls_l_Tc_m_Sreg_Array_SHIFTREG_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
l_Tc_m_Sreg_Array_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l_Tc_m_Sreg_Array_2_address0),
    .ce0(l_Tc_m_Sreg_Array_2_ce0),
    .we0(l_Tc_m_Sreg_Array_2_we0),
    .d0(l_Tc_m_Sreg_Array_2_d0),
    .q0(l_Tc_m_Sreg_Array_2_q0)
);

cemit_replaced_muls_Pipeline_VITIS_LOOP_89_1 grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start),
    .ap_done(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_done),
    .ap_idle(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_idle),
    .ap_ready(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_ready),
    .l_flush_Array_address0(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_address0),
    .l_flush_Array_ce0(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_ce0),
    .l_flush_Array_we0(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_we0),
    .l_flush_Array_d0(grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_d0),
    .l_flush_Array_q0(l_flush_Array_q0)
);

cemit_replaced_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2 grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start),
    .ap_done(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_done),
    .ap_idle(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_idle),
    .ap_ready(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_ready),
    .l_Tc_m_Sreg_Array_2_address0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_address0),
    .l_Tc_m_Sreg_Array_2_ce0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_ce0),
    .l_Tc_m_Sreg_Array_2_we0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_we0),
    .l_Tc_m_Sreg_Array_2_d0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_d0),
    .l_Tc_m_Sreg_Array_2_q0(l_Tc_m_Sreg_Array_2_q0),
    .l_Tc_m_Sreg_Array_address0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_address0),
    .l_Tc_m_Sreg_Array_ce0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_ce0),
    .l_Tc_m_Sreg_Array_we0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_we0),
    .l_Tc_m_Sreg_Array_d0(grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_d0),
    .l_Tc_m_Sreg_Array_q0(l_Tc_m_Sreg_Array_q0)
);

cemit_replaced_muls_Pipeline_VITIS_LOOP_101_2 grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start),
    .ap_done(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done),
    .ap_idle(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_idle),
    .ap_ready(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_ready),
    .l_dataA_0_dout(l_dataA_0_dout),
    .l_dataA_0_num_data_valid(3'd0),
    .l_dataA_0_fifo_cap(3'd0),
    .l_dataA_0_empty_n(l_dataA_0_empty_n),
    .l_dataA_0_read(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataA_0_read),
    .l_dataB_0_dout(l_dataB_0_dout),
    .l_dataB_0_num_data_valid(3'd0),
    .l_dataB_0_fifo_cap(3'd0),
    .l_dataB_0_empty_n(l_dataB_0_empty_n),
    .l_dataB_0_read(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_0_read),
    .l_dataB_1_din(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_din),
    .l_dataB_1_num_data_valid(2'd0),
    .l_dataB_1_fifo_cap(2'd0),
    .l_dataB_1_full_n(l_dataB_1_full_n),
    .l_dataB_1_write(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_write),
    .l_mul1_din(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_din),
    .l_mul1_num_data_valid(2'd0),
    .l_mul1_fifo_cap(2'd0),
    .l_mul1_full_n(l_mul1_full_n),
    .l_mul1_write(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_write),
    .l_Tc_m_Sreg_Array_2_address0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_address0),
    .l_Tc_m_Sreg_Array_2_ce0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_ce0),
    .l_Tc_m_Sreg_Array_2_we0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_we0),
    .l_Tc_m_Sreg_Array_2_d0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_d0),
    .l_Tc_m_Sreg_Array_2_q0(l_Tc_m_Sreg_Array_2_q0),
    .l_Tc_m_Sreg_Array_address0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_address0),
    .l_Tc_m_Sreg_Array_ce0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_ce0),
    .l_Tc_m_Sreg_Array_we0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_we0),
    .l_Tc_m_Sreg_Array_d0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_d0),
    .l_Tc_m_Sreg_Array_q0(l_Tc_m_Sreg_Array_q0),
    .l_flush_Array_address0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_address0),
    .l_flush_Array_ce0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_ce0),
    .l_flush_Array_we0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_we0),
    .l_flush_Array_d0(grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_d0),
    .l_flush_Array_q0(l_flush_Array_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg <= 1'b1;
        end else if ((grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_ready == 1'b1)) begin
            grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg <= 1'b1;
        end else if ((grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_ready == 1'b1)) begin
            grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg <= 1'b1;
        end else if ((grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_ready == 1'b1)) begin
            grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done == 1'b1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_2_address0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_2_address0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_address0;
    end else begin
        l_Tc_m_Sreg_Array_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_2_ce0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_2_ce0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_ce0;
    end else begin
        l_Tc_m_Sreg_Array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_2_d0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_2_d0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_d0;
    end else begin
        l_Tc_m_Sreg_Array_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_2_we0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_2_we0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_2_we0;
    end else begin
        l_Tc_m_Sreg_Array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_address0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_address0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_address0;
    end else begin
        l_Tc_m_Sreg_Array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_ce0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_ce0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_ce0;
    end else begin
        l_Tc_m_Sreg_Array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_d0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_d0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_d0;
    end else begin
        l_Tc_m_Sreg_Array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_Tc_m_Sreg_Array_we0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_Tc_m_Sreg_Array_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_Tc_m_Sreg_Array_we0 = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_l_Tc_m_Sreg_Array_we0;
    end else begin
        l_Tc_m_Sreg_Array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_dataA_0_read = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataA_0_read;
    end else begin
        l_dataA_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_dataB_0_read = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_0_read;
    end else begin
        l_dataB_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_dataB_1_write = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_write;
    end else begin
        l_dataB_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_flush_Array_address0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_flush_Array_address0 = grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_address0;
    end else begin
        l_flush_Array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_flush_Array_ce0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_flush_Array_ce0 = grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_ce0;
    end else begin
        l_flush_Array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_flush_Array_d0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_flush_Array_d0 = grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_d0;
    end else begin
        l_flush_Array_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_flush_Array_we0 = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_flush_Array_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_flush_Array_we0 = grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_l_flush_Array_we0;
    end else begin
        l_flush_Array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        l_mul1_write = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_write;
    end else begin
        l_mul1_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call7 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call8 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_done == 1'b0) | (grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_done == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_ap_start_reg;

assign grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start = grp_muls_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_46_ap_start_reg;

assign grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start = grp_muls_Pipeline_VITIS_LOOP_89_1_fu_40_ap_start_reg;

assign l_dataB_1_din = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_dataB_1_din;

assign l_mul1_din = grp_muls_Pipeline_VITIS_LOOP_101_2_fu_54_l_mul1_din;

assign start_out = real_start;

endmodule //cemit_replaced_muls
