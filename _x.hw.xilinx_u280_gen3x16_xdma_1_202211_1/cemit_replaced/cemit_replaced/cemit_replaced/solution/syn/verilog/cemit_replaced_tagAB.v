// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cemit_replaced_tagAB (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        l_strA4_i_dout,
        l_strA4_i_empty_n,
        l_strA4_i_read,
        l_strB5_i_dout,
        l_strB5_i_empty_n,
        l_strB5_i_read,
        l_aStr1_din,
        l_aStr1_num_data_valid,
        l_aStr1_fifo_cap,
        l_aStr1_full_n,
        l_aStr1_write,
        l_bStr2_din,
        l_bStr2_num_data_valid,
        l_bStr2_fifo_cap,
        l_bStr2_full_n,
        l_bStr2_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [63:0] l_strA4_i_dout;
input   l_strA4_i_empty_n;
output   l_strA4_i_read;
input  [63:0] l_strB5_i_dout;
input   l_strB5_i_empty_n;
output   l_strB5_i_read;
output  [65:0] l_aStr1_din;
input  [1:0] l_aStr1_num_data_valid;
input  [1:0] l_aStr1_fifo_cap;
input   l_aStr1_full_n;
output   l_aStr1_write;
output  [63:0] l_bStr2_din;
input  [1:0] l_bStr2_num_data_valid;
input  [1:0] l_bStr2_fifo_cap;
input   l_bStr2_full_n;
output   l_bStr2_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg l_strA4_i_read;
reg l_strB5_i_read;
reg[65:0] l_aStr1_din;
reg l_aStr1_write;
reg[63:0] l_bStr2_din;
reg l_bStr2_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_done;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_idle;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_ready;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strA4_i_read;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strB5_i_read;
wire   [65:0] grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_din;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_write;
wire   [63:0] grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_din;
wire    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_write;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_idle;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_ready;
wire   [65:0] grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_din;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_write;
wire   [63:0] grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_din;
wire    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_write;
reg    grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg;
reg    ap_block_state1_ignore_call5;
wire    ap_CS_fsm_state2;
reg    grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [4:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg = 1'b0;
#0 grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg = 1'b0;
end

cemit_replaced_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2 grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start),
    .ap_done(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_done),
    .ap_idle(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_idle),
    .ap_ready(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_ready),
    .l_strA4_i_dout(l_strA4_i_dout),
    .l_strA4_i_empty_n(l_strA4_i_empty_n),
    .l_strA4_i_read(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strA4_i_read),
    .l_strB5_i_dout(l_strB5_i_dout),
    .l_strB5_i_empty_n(l_strB5_i_empty_n),
    .l_strB5_i_read(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strB5_i_read),
    .l_aStr1_din(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_din),
    .l_aStr1_num_data_valid(2'd0),
    .l_aStr1_fifo_cap(2'd0),
    .l_aStr1_full_n(l_aStr1_full_n),
    .l_aStr1_write(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_write),
    .l_bStr2_din(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_din),
    .l_bStr2_num_data_valid(2'd0),
    .l_bStr2_fifo_cap(2'd0),
    .l_bStr2_full_n(l_bStr2_full_n),
    .l_bStr2_write(grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_write)
);

cemit_replaced_tagAB_Pipeline_VITIS_LOOP_283_3 grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start),
    .ap_done(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done),
    .ap_idle(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_idle),
    .ap_ready(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_ready),
    .l_aStr1_din(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_din),
    .l_aStr1_num_data_valid(2'd0),
    .l_aStr1_fifo_cap(2'd0),
    .l_aStr1_full_n(l_aStr1_full_n),
    .l_aStr1_write(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_write),
    .l_bStr2_din(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_din),
    .l_bStr2_num_data_valid(2'd0),
    .l_bStr2_fifo_cap(2'd0),
    .l_bStr2_full_n(l_bStr2_full_n),
    .l_bStr2_write(grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg <= 1'b1;
        end else if ((grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_ready == 1'b1)) begin
            grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg <= 1'b1;
        end else if ((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_ready == 1'b1)) begin
            grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        l_aStr1_din = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_din;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_aStr1_din = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_din;
    end else begin
        l_aStr1_din = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        l_aStr1_write = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_aStr1_write;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_aStr1_write = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_aStr1_write;
    end else begin
        l_aStr1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        l_bStr2_din = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_din;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_bStr2_din = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_din;
    end else begin
        l_bStr2_din = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        l_bStr2_write = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_l_bStr2_write;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        l_bStr2_write = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_bStr2_write;
    end else begin
        l_bStr2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        l_strA4_i_read = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strA4_i_read;
    end else begin
        l_strA4_i_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        l_strB5_i_read = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_l_strB5_i_read;
    end else begin
        l_strB5_i_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call5 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start = grp_tagAB_Pipeline_VITIS_LOOP_271_1_VITIS_LOOP_272_2_fu_24_ap_start_reg;

assign grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start = grp_tagAB_Pipeline_VITIS_LOOP_283_3_fu_36_ap_start_reg;

assign start_out = real_start;

endmodule //cemit_replaced_tagAB
