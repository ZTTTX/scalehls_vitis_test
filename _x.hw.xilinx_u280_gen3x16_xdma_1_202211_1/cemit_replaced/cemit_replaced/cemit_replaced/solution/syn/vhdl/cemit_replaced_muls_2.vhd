-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cemit_replaced_muls_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    l_dataA_1_dout : IN STD_LOGIC_VECTOR (33 downto 0);
    l_dataA_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    l_dataA_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    l_dataA_1_empty_n : IN STD_LOGIC;
    l_dataA_1_read : OUT STD_LOGIC;
    l_dataB_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    l_dataB_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    l_dataB_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    l_dataB_1_empty_n : IN STD_LOGIC;
    l_dataB_1_read : OUT STD_LOGIC;
    l_mul1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    l_mul1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    l_mul1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    l_mul1_full_n : IN STD_LOGIC;
    l_mul1_write : OUT STD_LOGIC );
end;


architecture behav of cemit_replaced_muls_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal l_flush_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_flush_Array_ce0 : STD_LOGIC;
    signal l_flush_Array_we0 : STD_LOGIC;
    signal l_flush_Array_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_flush_Array_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_Tc_m_Sreg_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_Tc_m_Sreg_Array_ce0 : STD_LOGIC;
    signal l_Tc_m_Sreg_Array_we0 : STD_LOGIC;
    signal l_Tc_m_Sreg_Array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_Tc_m_Sreg_Array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_Tc_m_Sreg_Array_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_Tc_m_Sreg_Array_1_ce0 : STD_LOGIC;
    signal l_Tc_m_Sreg_Array_1_we0 : STD_LOGIC;
    signal l_Tc_m_Sreg_Array_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_Tc_m_Sreg_Array_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_done : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_idle : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_ready : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_done : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_idle : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_ready : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_idle : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_ready : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataA_1_read : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataB_1_read : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_write : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_ce0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_we0 : STD_LOGIC;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call6 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call7 : BOOLEAN;
    signal grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_141_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        l_flush_Array_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_flush_Array_ce0 : OUT STD_LOGIC;
        l_flush_Array_we0 : OUT STD_LOGIC;
        l_flush_Array_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_flush_Array_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_Tc_m_Sreg_Array_1_ce0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_we0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_Tc_m_Sreg_Array_ce0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_we0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_153_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        l_dataA_1_dout : IN STD_LOGIC_VECTOR (33 downto 0);
        l_dataA_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        l_dataA_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        l_dataA_1_empty_n : IN STD_LOGIC;
        l_dataA_1_read : OUT STD_LOGIC;
        l_dataB_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        l_dataB_1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        l_dataB_1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        l_dataB_1_empty_n : IN STD_LOGIC;
        l_dataB_1_read : OUT STD_LOGIC;
        l_mul1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        l_mul1_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        l_mul1_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        l_mul1_full_n : IN STD_LOGIC;
        l_mul1_write : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_Tc_m_Sreg_Array_1_ce0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_we0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_Tc_m_Sreg_Array_ce0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_we0 : OUT STD_LOGIC;
        l_Tc_m_Sreg_Array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        l_Tc_m_Sreg_Array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        l_flush_Array_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_flush_Array_ce0 : OUT STD_LOGIC;
        l_flush_Array_we0 : OUT STD_LOGIC;
        l_flush_Array_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        l_flush_Array_q0 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cemit_replaced_muls_2_l_flush_Array_SHIFTREG_AUTO_0R0W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cemit_replaced_muls_2_l_Tc_m_Sreg_Array_SHIFTREG_AUTO_0R0W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    l_flush_Array_U : component cemit_replaced_muls_2_l_flush_Array_SHIFTREG_AUTO_0R0W
    generic map (
        DataWidth => 1,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_flush_Array_address0,
        ce0 => l_flush_Array_ce0,
        we0 => l_flush_Array_we0,
        d0 => l_flush_Array_d0,
        q0 => l_flush_Array_q0);

    l_Tc_m_Sreg_Array_U : component cemit_replaced_muls_2_l_Tc_m_Sreg_Array_SHIFTREG_AUTO_0R0W
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_Tc_m_Sreg_Array_address0,
        ce0 => l_Tc_m_Sreg_Array_ce0,
        we0 => l_Tc_m_Sreg_Array_we0,
        d0 => l_Tc_m_Sreg_Array_d0,
        q0 => l_Tc_m_Sreg_Array_q0);

    l_Tc_m_Sreg_Array_1_U : component cemit_replaced_muls_2_l_Tc_m_Sreg_Array_SHIFTREG_AUTO_0R0W
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_Tc_m_Sreg_Array_1_address0,
        ce0 => l_Tc_m_Sreg_Array_1_ce0,
        we0 => l_Tc_m_Sreg_Array_1_we0,
        d0 => l_Tc_m_Sreg_Array_1_d0,
        q0 => l_Tc_m_Sreg_Array_1_q0);

    grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38 : component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_141_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start,
        ap_done => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_done,
        ap_idle => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_idle,
        ap_ready => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_ready,
        l_flush_Array_address0 => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_address0,
        l_flush_Array_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_ce0,
        l_flush_Array_we0 => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_we0,
        l_flush_Array_d0 => grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_d0,
        l_flush_Array_q0 => l_flush_Array_q0);

    grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44 : component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start,
        ap_done => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_done,
        ap_idle => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_idle,
        ap_ready => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_ready,
        l_Tc_m_Sreg_Array_1_address0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_address0,
        l_Tc_m_Sreg_Array_1_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_ce0,
        l_Tc_m_Sreg_Array_1_we0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_we0,
        l_Tc_m_Sreg_Array_1_d0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_d0,
        l_Tc_m_Sreg_Array_1_q0 => l_Tc_m_Sreg_Array_1_q0,
        l_Tc_m_Sreg_Array_address0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_address0,
        l_Tc_m_Sreg_Array_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_ce0,
        l_Tc_m_Sreg_Array_we0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_we0,
        l_Tc_m_Sreg_Array_d0 => grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_d0,
        l_Tc_m_Sreg_Array_q0 => l_Tc_m_Sreg_Array_q0);

    grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52 : component cemit_replaced_muls_2_Pipeline_VITIS_LOOP_153_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start,
        ap_done => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done,
        ap_idle => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_idle,
        ap_ready => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_ready,
        l_dataA_1_dout => l_dataA_1_dout,
        l_dataA_1_num_data_valid => ap_const_lv3_0,
        l_dataA_1_fifo_cap => ap_const_lv3_0,
        l_dataA_1_empty_n => l_dataA_1_empty_n,
        l_dataA_1_read => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataA_1_read,
        l_dataB_1_dout => l_dataB_1_dout,
        l_dataB_1_num_data_valid => ap_const_lv2_0,
        l_dataB_1_fifo_cap => ap_const_lv2_0,
        l_dataB_1_empty_n => l_dataB_1_empty_n,
        l_dataB_1_read => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataB_1_read,
        l_mul1_din => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_din,
        l_mul1_num_data_valid => ap_const_lv2_0,
        l_mul1_fifo_cap => ap_const_lv2_0,
        l_mul1_full_n => l_mul1_full_n,
        l_mul1_write => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_write,
        l_Tc_m_Sreg_Array_1_address0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_address0,
        l_Tc_m_Sreg_Array_1_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_ce0,
        l_Tc_m_Sreg_Array_1_we0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_we0,
        l_Tc_m_Sreg_Array_1_d0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_d0,
        l_Tc_m_Sreg_Array_1_q0 => l_Tc_m_Sreg_Array_1_q0,
        l_Tc_m_Sreg_Array_address0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_address0,
        l_Tc_m_Sreg_Array_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_ce0,
        l_Tc_m_Sreg_Array_we0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_we0,
        l_Tc_m_Sreg_Array_d0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_d0,
        l_Tc_m_Sreg_Array_q0 => l_Tc_m_Sreg_Array_q0,
        l_flush_Array_address0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_address0,
        l_flush_Array_ce0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_ce0,
        l_flush_Array_we0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_we0,
        l_flush_Array_d0 => grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_d0,
        l_flush_Array_q0 => l_flush_Array_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_ready = ap_const_logic_1)) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_ready = ap_const_logic_1)) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_ready = ap_const_logic_1)) then 
                    grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done)
    begin
        if ((grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call6_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call6 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call7_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call7 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_done, grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_done = ap_const_logic_0) or (grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start <= grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_ap_start_reg;
    grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_start_reg;
    grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_ap_start_reg;

    internal_ap_ready_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_ap_done = ap_const_logic_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    l_Tc_m_Sreg_Array_1_address0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_address0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_1_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_1_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_address0;
        else 
            l_Tc_m_Sreg_Array_1_address0 <= "X";
        end if; 
    end process;


    l_Tc_m_Sreg_Array_1_ce0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_ce0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_1_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_1_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_ce0;
        else 
            l_Tc_m_Sreg_Array_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_Tc_m_Sreg_Array_1_d0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_d0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_1_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_1_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_d0;
        else 
            l_Tc_m_Sreg_Array_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    l_Tc_m_Sreg_Array_1_we0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_we0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_1_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_1_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_1_we0;
        else 
            l_Tc_m_Sreg_Array_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_Tc_m_Sreg_Array_address0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_address0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_address0;
        else 
            l_Tc_m_Sreg_Array_address0 <= "X";
        end if; 
    end process;


    l_Tc_m_Sreg_Array_ce0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_ce0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_ce0;
        else 
            l_Tc_m_Sreg_Array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_Tc_m_Sreg_Array_d0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_d0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_d0;
        else 
            l_Tc_m_Sreg_Array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    l_Tc_m_Sreg_Array_we0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_we0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_Tc_m_Sreg_Array_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_Tc_m_Sreg_Array_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_Tc_m_Sreg_Array_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_633_1_VITIS_LOOP_634_2_fu_44_l_Tc_m_Sreg_Array_we0;
        else 
            l_Tc_m_Sreg_Array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_dataA_1_read_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataA_1_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_dataA_1_read <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataA_1_read;
        else 
            l_dataA_1_read <= ap_const_logic_0;
        end if; 
    end process;


    l_dataB_1_read_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataB_1_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_dataB_1_read <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_dataB_1_read;
        else 
            l_dataB_1_read <= ap_const_logic_0;
        end if; 
    end process;


    l_flush_Array_address0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_address0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_flush_Array_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_flush_Array_address0 <= grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_address0;
        else 
            l_flush_Array_address0 <= "X";
        end if; 
    end process;


    l_flush_Array_ce0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_ce0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_flush_Array_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_flush_Array_ce0 <= grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_ce0;
        else 
            l_flush_Array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_flush_Array_d0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_d0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_flush_Array_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_flush_Array_d0 <= grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_d0;
        else 
            l_flush_Array_d0 <= "X";
        end if; 
    end process;


    l_flush_Array_we0_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_we0, grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_flush_Array_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_flush_Array_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            l_flush_Array_we0 <= grp_muls_2_Pipeline_VITIS_LOOP_141_1_fu_38_l_flush_Array_we0;
        else 
            l_flush_Array_we0 <= ap_const_logic_0;
        end if; 
    end process;

    l_mul1_din <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_din;

    l_mul1_write_assign_proc : process(grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_write, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            l_mul1_write <= grp_muls_2_Pipeline_VITIS_LOOP_153_2_fu_52_l_mul1_write;
        else 
            l_mul1_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
