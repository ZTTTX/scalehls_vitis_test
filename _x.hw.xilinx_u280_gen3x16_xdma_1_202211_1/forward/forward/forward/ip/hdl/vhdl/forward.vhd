-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity forward is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of forward is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "forward_forward,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=73702,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3349,HLS_SYN_LUT=4437,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (76 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (76 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (76 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (76 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (76 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (76 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (76 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (76 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (76 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (76 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (76 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal v25 : STD_LOGIC_VECTOR (63 downto 0);
    signal v26 : STD_LOGIC_VECTOR (63 downto 0);
    signal v27 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal v27_read_reg_320 : STD_LOGIC_VECTOR (63 downto 0);
    signal v26_read_reg_325 : STD_LOGIC_VECTOR (63 downto 0);
    signal v25_read_reg_330 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln61_fu_199_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln61_reg_341 : STD_LOGIC_VECTOR (2 downto 0);
    signal v30_addr_reg_349 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln43_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_250_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln46_reg_354 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_reg_359 : STD_LOGIC_VECTOR (60 downto 0);
    signal v30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v30_load_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal shl_ln1_fu_272_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1_reg_370 : STD_LOGIC_VECTOR (5 downto 0);
    signal v29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal v29_ce0 : STD_LOGIC;
    signal v29_we0 : STD_LOGIC;
    signal v29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v30_ce0 : STD_LOGIC;
    signal v30_we0 : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_idle : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_ready : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_ce0 : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_we0 : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_idle : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_ready : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_ce0 : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v18_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v18_out_ap_vld : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_ce : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_idle : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_ready : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_ce0 : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_ce : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call22 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln43_fu_233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln26_fu_296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal v14_fu_108 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln43_fu_227_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal indvars_iv1_fu_112 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln43_fu_281_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln43_fu_204_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal shl_ln46_1_fu_238_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln46_fu_246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (76 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component forward_forward_Pipeline_VITIS_LOOP_60_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        v29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v29_ce0 : OUT STD_LOGIC;
        v29_we0 : OUT STD_LOGIC;
        v29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v25 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component forward_forward_Pipeline_VITIS_LOOP_44_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v30_load : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        v29_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v29_ce0 : OUT STD_LOGIC;
        v29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln46 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln44 : IN STD_LOGIC_VECTOR (5 downto 0);
        v18_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        v18_out_ap_vld : OUT STD_LOGIC;
        grp_fu_380_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_380_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_ce : OUT STD_LOGIC );
    end component;


    component forward_forward_Pipeline_VITIS_LOOP_26_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln26 : IN STD_LOGIC_VECTOR (60 downto 0);
        v30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        v30_ce0 : OUT STD_LOGIC;
        v30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_380_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_380_p_ce : OUT STD_LOGIC );
    end component;


    component forward_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component forward_v29_RAM_T2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component forward_v30_RAM_T2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component forward_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        v25 : OUT STD_LOGIC_VECTOR (63 downto 0);
        v26 : OUT STD_LOGIC_VECTOR (63 downto 0);
        v27 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component forward_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    v29_U : component forward_v29_RAM_T2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => v29_address0,
        ce0 => v29_ce0,
        we0 => v29_we0,
        d0 => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_d0,
        q0 => v29_q0);

    v30_U : component forward_v30_RAM_T2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => v30_address0,
        ce0 => v30_ce0,
        we0 => v30_we0,
        d0 => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v18_out,
        q0 => v30_q0);

    grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166 : component forward_forward_Pipeline_VITIS_LOOP_60_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start,
        ap_done => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done,
        ap_idle => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_idle,
        ap_ready => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_ready,
        m_axi_gmem_AWVALID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        v29_address0 => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_address0,
        v29_ce0 => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_ce0,
        v29_we0 => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_we0,
        v29_d0 => grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_d0,
        v25 => v25_read_reg_330,
        trunc_ln => trunc_ln61_reg_341);

    grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177 : component forward_forward_Pipeline_VITIS_LOOP_44_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start,
        ap_done => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done,
        ap_idle => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_idle,
        ap_ready => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_ready,
        v30_load => v30_load_reg_365,
        m_axi_gmem_AWVALID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        v29_address0 => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_address0,
        v29_ce0 => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_ce0,
        v29_q0 => v29_q0,
        add_ln46 => add_ln46_reg_354,
        zext_ln44 => shl_ln1_reg_370,
        v18_out => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v18_out,
        v18_out_ap_vld => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v18_out_ap_vld,
        grp_fu_380_p_din0 => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din0,
        grp_fu_380_p_din1 => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din1,
        grp_fu_380_p_opcode => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_opcode,
        grp_fu_380_p_dout0 => grp_fu_380_p2,
        grp_fu_380_p_ce => grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_ce);

    grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189 : component forward_forward_Pipeline_VITIS_LOOP_26_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start,
        ap_done => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done,
        ap_idle => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_idle,
        ap_ready => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_ready,
        m_axi_gmem_AWVALID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv64_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln26 => trunc_ln2_reg_359,
        v30_address0 => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_address0,
        v30_ce0 => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_ce0,
        v30_q0 => v30_q0,
        grp_fu_380_p_din0 => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din0,
        grp_fu_380_p_din1 => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din1,
        grp_fu_380_p_opcode => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_opcode,
        grp_fu_380_p_dout0 => grp_fu_380_p2,
        grp_fu_380_p_ce => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_ce);

    ctrl_s_axi_U : component forward_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        v25 => v25,
        v26 => v26,
        v27 => v27,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem_m_axi_U : component forward_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 69,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 64,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWLEN => gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WDATA,
        I_WSTRB => grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    fadd_32ns_32ns_32_7_full_dsp_1_U21 : component forward_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_380_p0,
        din1 => grp_fu_380_p1,
        ce => grp_fu_380_ce,
        dout => grp_fu_380_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_ready = ap_const_logic_1)) then 
                    grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_ready = ap_const_logic_1)) then 
                    grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_ready = ap_const_logic_1)) then 
                    grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    indvars_iv1_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv1_fu_112 <= trunc_ln43_fu_204_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvars_iv1_fu_112 <= xor_ln43_fu_281_p2;
            end if; 
        end if;
    end process;

    v14_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v14_fu_108 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln43_fu_221_p2 = ap_const_lv1_0))) then 
                v14_fu_108 <= add_ln43_fu_227_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln43_fu_221_p2 = ap_const_lv1_0))) then
                add_ln46_reg_354 <= add_ln46_fu_250_p2;
                v30_addr_reg_349 <= zext_ln43_fu_233_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    shl_ln1_reg_370(5 downto 3) <= shl_ln1_fu_272_p3(5 downto 3);
                v30_load_reg_365 <= v30_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln43_fu_221_p2 = ap_const_lv1_1))) then
                trunc_ln2_reg_359 <= v26_read_reg_325(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln61_reg_341 <= trunc_ln61_fu_199_p1;
                v25_read_reg_330 <= v25;
                v26_read_reg_325 <= v26;
                v27_read_reg_320 <= v27;
            end if;
        end if;
    end process;
    shl_ln1_reg_370(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_CS_fsm_state77, ap_CS_fsm_state3, icmp_ln43_fu_221_p2, grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done, gmem_AWREADY, gmem_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln43_fu_221_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln43_fu_227_p2 <= std_logic_vector(unsigned(v14_fu_108) + unsigned(ap_const_lv4_1));
    add_ln46_fu_250_p2 <= std_logic_vector(unsigned(zext_ln46_fu_246_p1) + unsigned(v27_read_reg_320));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done)
    begin
        if ((grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done)
    begin
        if ((grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;

    ap_ST_fsm_state77_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state77_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state77_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done)
    begin
        if ((grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call22_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call22 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state77, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state77, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARADDR, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARADDR, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_ARADDR <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARADDR <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLEN, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLEN, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_ARLEN <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARLEN <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARVALID, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARVALID, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_ARVALID <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARVALID <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state7, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state8, ap_CS_fsm_state9, sext_ln26_fu_296_p1)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmem_AWADDR <= sext_ln26_fu_296_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_AWADDR <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state7, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmem_AWLEN <= ap_const_lv32_5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_AWLEN <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state7, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_AWVALID <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state77, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_BREADY, gmem_BVALID, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_BREADY <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_RREADY, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_RREADY, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem_RREADY <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_RREADY <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WVALID, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            gmem_WVALID <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_ap_start_reg;
    grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_ap_start_reg;
    grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_ap_start_reg;

    grp_fu_380_ce_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_ce, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_ce, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_380_ce <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_380_ce <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_ce;
        else 
            grp_fu_380_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_380_p0_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din0, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_380_p0 <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_380_p0 <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din0;
        else 
            grp_fu_380_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_380_p1_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din1, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_380_p1 <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_grp_fu_380_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_380_p1 <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_grp_fu_380_p_din1;
        else 
            grp_fu_380_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln43_fu_221_p2 <= "1" when (v14_fu_108 = ap_const_lv4_A) else "0";
        sext_ln26_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_359),64));

    shl_ln1_fu_272_p3 <= (indvars_iv1_fu_112 & ap_const_lv3_0);
    shl_ln46_1_fu_238_p3 <= (v14_fu_108 & ap_const_lv2_0);
    trunc_ln43_fu_204_p1 <= v27(3 - 1 downto 0);
    trunc_ln61_fu_199_p1 <= v25(3 - 1 downto 0);

    v29_address0_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_address0, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_address0, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            v29_address0 <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v29_address0 <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_address0;
        else 
            v29_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    v29_ce0_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_ce0, grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_ce0, ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            v29_ce0 <= grp_forward_Pipeline_VITIS_LOOP_44_3_fu_177_v29_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v29_ce0 <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_ce0;
        else 
            v29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v29_we0_assign_proc : process(grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v29_we0 <= grp_forward_Pipeline_VITIS_LOOP_60_1_fu_166_v29_we0;
        else 
            v29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v30_address0_assign_proc : process(v30_addr_reg_349, ap_CS_fsm_state3, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_address0, ap_CS_fsm_state9, zext_ln43_fu_233_p1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v30_address0 <= v30_addr_reg_349;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v30_address0 <= zext_ln43_fu_233_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v30_address0 <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_address0;
        else 
            v30_address0 <= "XXXX";
        end if; 
    end process;


    v30_ce0_assign_proc : process(ap_CS_fsm_state3, grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_ce0, ap_CS_fsm_state9, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            v30_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v30_ce0 <= grp_forward_Pipeline_VITIS_LOOP_26_2_fu_189_v30_ce0;
        else 
            v30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v30_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v30_we0 <= ap_const_logic_1;
        else 
            v30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln43_fu_281_p2 <= (indvars_iv1_fu_112 xor ap_const_lv3_4);
    zext_ln43_fu_233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v14_fu_108),64));
    zext_ln46_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln46_1_fu_238_p3),64));
end behav;
